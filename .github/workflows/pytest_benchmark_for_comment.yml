name: Run benchmarks and generate comment text
on:
  pull_request:
    branches:
      - master

jobs:
  run-benchmarks-and-generate-comment:
    runs-on: ubuntu-20.04
    env:
      PR_NUMBER: ${{ github.event.number }}
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9.10

      #----------------------------------------------
      #  -- save a few section by caching poetry --
      #----------------------------------------------
      - name: Load cached Poetry installation
        uses: actions/cache@v2
        with:
          path: ~/.local  # the path depends on the OS
          key: poetry-0  # increment to reset cache
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-bm-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}-00
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root --with benchmarking
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install library
        run: poetry install --no-interaction

      #----------------------------------------------
      #              run benchmarks and comment
      #----------------------------------------------
      - name: Run benchmark and create comment markdown
        run: |
          source .venv/bin/activate
          pytest benchmarking/test_performance.py  --benchmark-json benchmarking/output.json -k 'test_2_rounds_1k_sqlite or test_2_rounds_1k_duckdb'
          python benchmarking/combine_benchmarks_timeseries.py
          # mv benchmark_comment_markdown.md .pr_info/benchmark_comment_markdown.md

      # NB: it is necessary to save this comment in an artifact and post in a separate workflow.
      # This is because for fork PRs this will run in the fork's context, which does not
      # have write access to the main repo.
      - name: Save comment markdown file as artifact
        uses: actions/upload-artifact@v3
        with:
          name: benchmark-markdown-comment-pr-${{ PR_NUMBER }}
          path: benchmark_comment_markdown.md
      # This workflow will then trigger the one in post_benchmarking_comment.yml, via respository_dispatch
      # we need to tell that workflow which PR triggered it, so that it will post in the right thread
      - name: Repository dispatch - trigger PR comment event workflow
        uses: peter-evans/repository-dispatch@v2
        with:
          event-type: trigger-pr-comment
          client-payload: '{"pr_number": "${{ PR_NUMBER }}"}'
