name: Run tests with cache
on:
  pull_request:
    branches:
      - master
      - "**dev"
    paths:
      - splink/**
      - tests/**
      - pyproject.toml

jobs:
  test:
    runs-on: ubuntu-latest # Use latest unless a specific version is necessary
    strategy:
      matrix:
        python-version: ["3.8", "3.9"] # Simplify version if specific patch is not needed
    name: Run tests with Python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pypoetry
            .venv
          key: ${{ runner.os }}-py${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}-00

      - uses: snok/install-poetry@v1.2
        with:
          version: 1.5.1

      - name: Install dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-interaction --no-root
      #Needed temporarily to get faster altair charts
      - name: Install altair directly with Poetry
        run: poetry add git+https://github.com/altair-viz/altair.git

      - name: Run tests
        run: poetry run pytest --durations=0 -m "spark_only or sqlite_only" tests/
