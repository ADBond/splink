name: Postgres tests
on:
  pull_request:
    branches:
      - master
      - "**dev"
    paths:
      - splink/**
      - tests/**
      - pyproject.toml

jobs:
  test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["3.8.16", "3.9.10"]
    services:
      pg_splink_ci:
        image: postgres
        # use default connection options - no need to do any different
        env:
          POSTGRES_USER: splinkognito
          POSTGRES_PASSWORD: splink123!
          POSTGRES_DB: splink_db
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # map port so we can access
          - 5432:5432
    name: Run tests with Python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pypoetry
            .venv
          key: ${{ runner.os }}-py${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}-00

      - uses: snok/install-poetry@v1.2
        with:
          version: 1.5.1
          virtualenvs-in-project: true

      - name: Install dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-interaction --no-root

      - name: Run tests
        run: poetry run pytest -v --durations=0 -m "postgres_only" tests/
